package dats.model;

import dats.model.common.DaTrackingProcessViewRow;

import java.sql.Timestamp;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 16 12:53:57 EAT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DaTrackingProcessViewRowImpl extends ViewRowImpl implements DaTrackingProcessViewRow {

    public static final int ENTITY_DATRACKINGPROCESS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Id,
        DaId,
        DaStatusId,
        StepId,
        UserId,
        DateEntered,
        Comments,
        IsActive,
        DaTrackingProcessView,
        DaTrackingProcessView1,
        DaTrackingProcessView2,
        DaTrackingProcessView3,
        DaTrackingProcessDocumentsView,
        UsersView,
        UsersView1,
        StepsView1,
        UsersView2,
        DisbursementAuthorizationsView1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ID = AttributesEnum.Id.index();
    public static final int DAID = AttributesEnum.DaId.index();
    public static final int DASTATUSID = AttributesEnum.DaStatusId.index();
    public static final int STEPID = AttributesEnum.StepId.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int DATEENTERED = AttributesEnum.DateEntered.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int ISACTIVE = AttributesEnum.IsActive.index();
    public static final int DATRACKINGPROCESSVIEW = AttributesEnum.DaTrackingProcessView.index();
    public static final int DATRACKINGPROCESSVIEW1 = AttributesEnum.DaTrackingProcessView1.index();
    public static final int DATRACKINGPROCESSVIEW2 = AttributesEnum.DaTrackingProcessView2.index();
    public static final int DATRACKINGPROCESSVIEW3 = AttributesEnum.DaTrackingProcessView3.index();
    public static final int DATRACKINGPROCESSDOCUMENTSVIEW = AttributesEnum.DaTrackingProcessDocumentsView.index();
    public static final int USERSVIEW = AttributesEnum.UsersView.index();
    public static final int USERSVIEW1 = AttributesEnum.UsersView1.index();
    public static final int STEPSVIEW1 = AttributesEnum.StepsView1.index();
    public static final int USERSVIEW2 = AttributesEnum.UsersView2.index();
    public static final int DISBURSEMENTAUTHORIZATIONSVIEW1 = AttributesEnum.DisbursementAuthorizationsView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DaTrackingProcessViewRowImpl() {
    }

    /**
     * Gets DaTrackingProcess entity object.
     * @return the DaTrackingProcess
     */
    public EntityImpl getDaTrackingProcess() {
        return (EntityImpl) getEntity(ENTITY_DATRACKINGPROCESS);
    }

    /**
     * Gets the attribute value for id using the alias name Id.
     * @return the id
     */
    public Integer getId() {
        return (Integer) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for id using the alias name Id.
     * @param value value to set the id
     */
    public void setId(Integer value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for da_id using the alias name DaId.
     * @return the da_id
     */
    public Integer getDaId() {
        return (Integer) getAttributeInternal(DAID);
    }

    /**
     * Sets <code>value</code> as attribute value for da_id using the alias name DaId.
     * @param value value to set the da_id
     */
    public void setDaId(Integer value) {
        setAttributeInternal(DAID, value);
    }

    /**
     * Gets the attribute value for da_status_id using the alias name DaStatusId.
     * @return the da_status_id
     */
    public Integer getDaStatusId() {
        return (Integer) getAttributeInternal(DASTATUSID);
    }

    /**
     * Sets <code>value</code> as attribute value for da_status_id using the alias name DaStatusId.
     * @param value value to set the da_status_id
     */
    public void setDaStatusId(Integer value) {
        setAttributeInternal(DASTATUSID, value);
    }

    /**
     * Gets the attribute value for step_id using the alias name StepId.
     * @return the step_id
     */
    public Integer getStepId() {
        return (Integer) getAttributeInternal(STEPID);
    }

    /**
     * Sets <code>value</code> as attribute value for step_id using the alias name StepId.
     * @param value value to set the step_id
     */
    public void setStepId(Integer value) {
        setAttributeInternal(STEPID, value);
    }

    /**
     * Gets the attribute value for user_id using the alias name UserId.
     * @return the user_id
     */
    public Integer getUserId() {
        return (Integer) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as attribute value for user_id using the alias name UserId.
     * @param value value to set the user_id
     */
    public void setUserId(Integer value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for date_entered using the alias name DateEntered.
     * @return the date_entered
     */
    public Timestamp getDateEntered() {
        return (Timestamp) getAttributeInternal(DATEENTERED);
    }

    /**
     * Sets <code>value</code> as attribute value for date_entered using the alias name DateEntered.
     * @param value value to set the date_entered
     */
    public void setDateEntered(Timestamp value) {
        setAttributeInternal(DATEENTERED, value);
    }

    /**
     * Gets the attribute value for comments using the alias name Comments.
     * @return the comments
     */
    public String getComments() {
        return (String) getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for comments using the alias name Comments.
     * @param value value to set the comments
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }

    /**
     * Gets the attribute value for is_active using the alias name IsActive.
     * @return the is_active
     */
    public Integer getIsActive() {
        return (Integer) getAttributeInternal(ISACTIVE);
    }

    /**
     * Sets <code>value</code> as attribute value for is_active using the alias name IsActive.
     * @param value value to set the is_active
     */
    public void setIsActive(Integer value) {
        setAttributeInternal(ISACTIVE, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link DaTrackingProcessView.
     */
    public RowIterator getDaTrackingProcessView() {
        return (RowIterator) getAttributeInternal(DATRACKINGPROCESSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link DaTrackingProcessView1.
     */
    public RowIterator getDaTrackingProcessView1() {
        return (RowIterator) getAttributeInternal(DATRACKINGPROCESSVIEW1);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link DaTrackingProcessView2.
     */
    public RowIterator getDaTrackingProcessView2() {
        return (RowIterator) getAttributeInternal(DATRACKINGPROCESSVIEW2);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link DaTrackingProcessView3.
     */
    public RowIterator getDaTrackingProcessView3() {
        return (RowIterator) getAttributeInternal(DATRACKINGPROCESSVIEW3);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link DaTrackingProcessDocumentsView.
     */
    public RowIterator getDaTrackingProcessDocumentsView() {
        return (RowIterator) getAttributeInternal(DATRACKINGPROCESSDOCUMENTSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link UsersView.
     */
    public RowIterator getUsersView() {
        return (RowIterator) getAttributeInternal(USERSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link UsersView1.
     */
    public RowIterator getUsersView1() {
        return (RowIterator) getAttributeInternal(USERSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> StepsView1.
     */
    public RowSet getStepsView1() {
        return (RowSet) getAttributeInternal(STEPSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UsersView2.
     */
    public RowSet getUsersView2() {
        return (RowSet) getAttributeInternal(USERSVIEW2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DisbursementAuthorizationsView1.
     */
    public RowSet getDisbursementAuthorizationsView1() {
        return (RowSet) getAttributeInternal(DISBURSEMENTAUTHORIZATIONSVIEW1);
    }
}

