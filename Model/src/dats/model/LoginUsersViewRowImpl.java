package dats.model;

import dats.model.common.LoginUsersViewRow;

import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 13 11:52:34 EAT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LoginUsersViewRowImpl extends ViewRowImpl implements LoginUsersViewRow {

    public static final int ENTITY_LOGINUSERS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Username,
        PassWord,
        Description;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int USERNAME = AttributesEnum.Username.index();
    public static final int PASSWORD = AttributesEnum.PassWord.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LoginUsersViewRowImpl() {
    }

    /**
     * Gets LoginUsers entity object.
     * @return the LoginUsers
     */
    public EntityImpl getLoginUsers() {
        return (EntityImpl) getEntity(ENTITY_LOGINUSERS);
    }

    /**
     * Gets the attribute value for username using the alias name Username.
     * @return the username
     */
    public String getUsername() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for username using the alias name Username.
     * @param value value to set the username
     */
    public void setUsername(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for pass_word using the alias name PassWord.
     * @return the pass_word
     */
    public String getPassWord() {
        return (String) getAttributeInternal(PASSWORD);
    }

    /**
     * Sets <code>value</code> as attribute value for pass_word using the alias name PassWord.
     * @param value value to set the pass_word
     */
    public void setPassWord(String value) {
        setAttributeInternal(PASSWORD, value);
    }

    /**
     * Gets the attribute value for description using the alias name Description.
     * @return the description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for description using the alias name Description.
     * @param value value to set the description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }
}

