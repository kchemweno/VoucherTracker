package dats.model;

import java.sql.Date;

import oracle.jbo.ApplicationModule;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.client.Configuration;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 13 09:43:22 EAT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PaymentsImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Id,
        MoneyVendorId,
        DaId,
        SectorId,
        CategoryId,
        PhaseId,
        LoaId,
        DistributedItemsId,
        NgoId,
        DistrictId,
        PaymentLocationId,
        PaymentCycleId,
        PeriodPaid,
        ForemenVouchers,
        Workers,
        PoNumber,
        AuthorizedAmount,
        AmountPaid,
        RateId,
        VouchersToReceive,
        DateOfInvoice,
        ReimbursedThroughInvoiceNumber,
        DateOfPay,
        PayReferenceNumber,
        BalToPay,
        MoneyVendorCommission,
        GrossAmount,
        AmountPaidAndReimbursed;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int MONEYVENDORID = AttributesEnum.MoneyVendorId.index();
    public static final int DAID = AttributesEnum.DaId.index();
    public static final int SECTORID = AttributesEnum.SectorId.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int PHASEID = AttributesEnum.PhaseId.index();
    public static final int LOAID = AttributesEnum.LoaId.index();
    public static final int DISTRIBUTEDITEMSID = AttributesEnum.DistributedItemsId.index();
    public static final int NGOID = AttributesEnum.NgoId.index();
    public static final int DISTRICTID = AttributesEnum.DistrictId.index();
    public static final int PAYMENTLOCATIONID = AttributesEnum.PaymentLocationId.index();
    public static final int PAYMENTCYCLEID = AttributesEnum.PaymentCycleId.index();
    public static final int PERIODPAID = AttributesEnum.PeriodPaid.index();
    public static final int FOREMENVOUCHERS = AttributesEnum.ForemenVouchers.index();
    public static final int WORKERS = AttributesEnum.Workers.index();
    public static final int PONUMBER = AttributesEnum.PoNumber.index();
    public static final int AUTHORIZEDAMOUNT = AttributesEnum.AuthorizedAmount.index();
    public static final int AMOUNTPAID = AttributesEnum.AmountPaid.index();
    public static final int RATEID = AttributesEnum.RateId.index();
    public static final int VOUCHERSTORECEIVE = AttributesEnum.VouchersToReceive.index();
    public static final int DATEOFINVOICE = AttributesEnum.DateOfInvoice.index();
    public static final int REIMBURSEDTHROUGHINVOICENUMBER = AttributesEnum.ReimbursedThroughInvoiceNumber.index();
    public static final int DATEOFPAY = AttributesEnum.DateOfPay.index();
    public static final int PAYREFERENCENUMBER = AttributesEnum.PayReferenceNumber.index();
    public static final int BALTOPAY = AttributesEnum.BalToPay.index();
    public static final int MONEYVENDORCOMMISSION = AttributesEnum.MoneyVendorCommission.index();
    public static final int GROSSAMOUNT = AttributesEnum.GrossAmount.index();
    public static final int AMOUNTPAIDANDREIMBURSED = AttributesEnum.AmountPaidAndReimbursed.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PaymentsImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public Integer getId() {
        return (Integer) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Integer value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for MoneyVendorId, using the alias name MoneyVendorId.
     * @return the value of MoneyVendorId
     */
    public Integer getMoneyVendorId() {
        return (Integer) getAttributeInternal(MONEYVENDORID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MoneyVendorId.
     * @param value value to set the MoneyVendorId
     */
    public void setMoneyVendorId(Integer value) {
        setAttributeInternal(MONEYVENDORID, value);
    }

    /**
     * Gets the attribute value for DaId, using the alias name DaId.
     * @return the value of DaId
     */
    public Integer getDaId() {
        return (Integer) getAttributeInternal(DAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DaId.
     * @param value value to set the DaId
     */
    public void setDaId(Integer value) {
        setAttributeInternal(DAID, value);
    }

    /**
     * Gets the attribute value for SectorId, using the alias name SectorId.
     * @return the value of SectorId
     */
    public Integer getSectorId() {
        return (Integer) getAttributeInternal(SECTORID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SectorId.
     * @param value value to set the SectorId
     */
    public void setSectorId(Integer value) {
        setAttributeInternal(SECTORID, value);
    }

    /**
     * Gets the attribute value for CategoryId, using the alias name CategoryId.
     * @return the value of CategoryId
     */
    public Integer getCategoryId() {
        return (Integer) getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryId.
     * @param value value to set the CategoryId
     */
    public void setCategoryId(Integer value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for PhaseId, using the alias name PhaseId.
     * @return the value of PhaseId
     */
    public Integer getPhaseId() {
        return (Integer) getAttributeInternal(PHASEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PhaseId.
     * @param value value to set the PhaseId
     */
    public void setPhaseId(Integer value) {
        setAttributeInternal(PHASEID, value);
    }

    /**
     * Gets the attribute value for LoaId, using the alias name LoaId.
     * @return the value of LoaId
     */
    public Integer getLoaId() {
        return (Integer) getAttributeInternal(LOAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoaId.
     * @param value value to set the LoaId
     */
    public void setLoaId(Integer value) {
        setAttributeInternal(LOAID, value);
    }

    /**
     * Gets the attribute value for DistributedItemsId, using the alias name DistributedItemsId.
     * @return the value of DistributedItemsId
     */
    public Integer getDistributedItemsId() {
        return (Integer) getAttributeInternal(DISTRIBUTEDITEMSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DistributedItemsId.
     * @param value value to set the DistributedItemsId
     */
    public void setDistributedItemsId(Integer value) {
        setAttributeInternal(DISTRIBUTEDITEMSID, value);
    }

    /**
     * Gets the attribute value for NgoId, using the alias name NgoId.
     * @return the value of NgoId
     */
    public Integer getNgoId() {
        return (Integer) getAttributeInternal(NGOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for NgoId.
     * @param value value to set the NgoId
     */
    public void setNgoId(Integer value) {
        setAttributeInternal(NGOID, value);
    }

    /**
     * Gets the attribute value for DistrictId, using the alias name DistrictId.
     * @return the value of DistrictId
     */
    public Integer getDistrictId() {
        return (Integer) getAttributeInternal(DISTRICTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DistrictId.
     * @param value value to set the DistrictId
     */
    public void setDistrictId(Integer value) {
        setAttributeInternal(DISTRICTID, value);
    }

    /**
     * Gets the attribute value for PaymentLocationId, using the alias name PaymentLocationId.
     * @return the value of PaymentLocationId
     */
    public Integer getPaymentLocationId() {
        return (Integer) getAttributeInternal(PAYMENTLOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PaymentLocationId.
     * @param value value to set the PaymentLocationId
     */
    public void setPaymentLocationId(Integer value) {
        setAttributeInternal(PAYMENTLOCATIONID, value);
    }

    /**
     * Gets the attribute value for PaymentCycleId, using the alias name PaymentCycleId.
     * @return the value of PaymentCycleId
     */
    public Integer getPaymentCycleId() {
        return (Integer) getAttributeInternal(PAYMENTCYCLEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PaymentCycleId.
     * @param value value to set the PaymentCycleId
     */
    public void setPaymentCycleId(Integer value) {
        setAttributeInternal(PAYMENTCYCLEID, value);
    }

    /**
     * Gets the attribute value for PeriodPaid, using the alias name PeriodPaid.
     * @return the value of PeriodPaid
     */
    public String getPeriodPaid() {
        return (String) getAttributeInternal(PERIODPAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PeriodPaid.
     * @param value value to set the PeriodPaid
     */
    public void setPeriodPaid(String value) {
        setAttributeInternal(PERIODPAID, value);
    }

    /**
     * Gets the attribute value for ForemenVouchers, using the alias name ForemenVouchers.
     * @return the value of ForemenVouchers
     */
    public Integer getForemenVouchers() {
        return (Integer) getAttributeInternal(FOREMENVOUCHERS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ForemenVouchers.
     * @param value value to set the ForemenVouchers
     */
    public void setForemenVouchers(Integer value) {
        setAttributeInternal(FOREMENVOUCHERS, value);
    }

    /**
     * Gets the attribute value for Workers, using the alias name Workers.
     * @return the value of Workers
     */
    public Integer getWorkers() {
        return (Integer) getAttributeInternal(WORKERS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Workers.
     * @param value value to set the Workers
     */
    public void setWorkers(Integer value) {
        setAttributeInternal(WORKERS, value);
    }

    /**
     * Gets the attribute value for PoNumber, using the alias name PoNumber.
     * @return the value of PoNumber
     */
    public String getPoNumber() {
        return (String) getAttributeInternal(PONUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoNumber.
     * @param value value to set the PoNumber
     */
    public void setPoNumber(String value) {
        setAttributeInternal(PONUMBER, value);
    }

    /**
     * Gets the attribute value for AuthorizedAmount, using the alias name AuthorizedAmount.
     * @return the value of AuthorizedAmount
     */
    public Float getAuthorizedAmount() {
        return (Float) getAttributeInternal(AUTHORIZEDAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AuthorizedAmount.
     * @param value value to set the AuthorizedAmount
     */
    public void setAuthorizedAmount(Float value) {
        setAttributeInternal(AUTHORIZEDAMOUNT, value);
    }

    /**
     * Gets the attribute value for AmountPaid, using the alias name AmountPaid.
     * @return the value of AmountPaid
     */
    public Float getAmountPaid() {
        return (Float) getAttributeInternal(AMOUNTPAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmountPaid.
     * @param value value to set the AmountPaid
     */
    public void setAmountPaid(Float value) {
        setAttributeInternal(AMOUNTPAID, value);
    }

    /**
     * Gets the attribute value for RateId, using the alias name RateId.
     * @return the value of RateId
     */
    public Integer getRateId() {
        return (Integer) getAttributeInternal(RATEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RateId.
     * @param value value to set the RateId
     */
    public void setRateId(Integer value) {
        setAttributeInternal(RATEID, value);
    }

    /**
     * Gets the attribute value for VouchersToReceive, using the alias name VouchersToReceive.
     * @return the value of VouchersToReceive
     */
    public Integer getVouchersToReceive() {
        return (Integer) getAttributeInternal(VOUCHERSTORECEIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VouchersToReceive.
     * @param value value to set the VouchersToReceive
     */
    public void setVouchersToReceive(Integer value) {
        setAttributeInternal(VOUCHERSTORECEIVE, value);
    }

    /**
     * Gets the attribute value for DateOfInvoice, using the alias name DateOfInvoice.
     * @return the value of DateOfInvoice
     */
    public Date getDateOfInvoice() {
        return (Date) getAttributeInternal(DATEOFINVOICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DateOfInvoice.
     * @param value value to set the DateOfInvoice
     */
    public void setDateOfInvoice(Date value) {
        setAttributeInternal(DATEOFINVOICE, value);
    }

    /**
     * Gets the attribute value for ReimbursedThroughInvoiceNumber, using the alias name ReimbursedThroughInvoiceNumber.
     * @return the value of ReimbursedThroughInvoiceNumber
     */
    public String getReimbursedThroughInvoiceNumber() {
        return (String) getAttributeInternal(REIMBURSEDTHROUGHINVOICENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReimbursedThroughInvoiceNumber.
     * @param value value to set the ReimbursedThroughInvoiceNumber
     */
    public void setReimbursedThroughInvoiceNumber(String value) {
        setAttributeInternal(REIMBURSEDTHROUGHINVOICENUMBER, value);
    }

    /**
     * Gets the attribute value for DateOfPay, using the alias name DateOfPay.
     * @return the value of DateOfPay
     */
    public Date getDateOfPay() {
        return (Date) getAttributeInternal(DATEOFPAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for DateOfPay.
     * @param value value to set the DateOfPay
     */
    public void setDateOfPay(Date value) {
        setAttributeInternal(DATEOFPAY, value);
    }

    /**
     * Gets the attribute value for PayReferenceNumber, using the alias name PayReferenceNumber.
     * @return the value of PayReferenceNumber
     */
    public String getPayReferenceNumber() {
        return (String) getAttributeInternal(PAYREFERENCENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PayReferenceNumber.
     * @param value value to set the PayReferenceNumber
     */
    public void setPayReferenceNumber(String value) {
        setAttributeInternal(PAYREFERENCENUMBER, value);
    }

    /**
     * Gets the attribute value for BalToPay, using the alias name BalToPay.
     * @return the value of BalToPay
     */
    public Float getBalToPay() {
        return (Float) getAttributeInternal(BALTOPAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BalToPay.
     * @param value value to set the BalToPay
     */
    public void setBalToPay(Float value) {
        setAttributeInternal(BALTOPAY, value);
    }

    /**
     * Gets the attribute value for MoneyVendorCommission, using the alias name MoneyVendorCommission.
     * @return the value of MoneyVendorCommission
     */
    public Float getMoneyVendorCommission() {
        return (Float) getAttributeInternal(MONEYVENDORCOMMISSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for MoneyVendorCommission.
     * @param value value to set the MoneyVendorCommission
     */
    public void setMoneyVendorCommission(Float value) {
        setAttributeInternal(MONEYVENDORCOMMISSION, value);
    }

    /**
     * Gets the attribute value for GrossAmount, using the alias name GrossAmount.
     * @return the value of GrossAmount
     */
    public Float getGrossAmount() {
        return (Float) getAttributeInternal(GROSSAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrossAmount.
     * @param value value to set the GrossAmount
     */
    public void setGrossAmount(Float value) {
        setAttributeInternal(GROSSAMOUNT, value);
    }

    /**
     * Gets the attribute value for AmountPaidAndReimbursed, using the alias name AmountPaidAndReimbursed.
     * @return the value of AmountPaidAndReimbursed
     */
    public Float getAmountPaidAndReimbursed() {
        return (Float) getAttributeInternal(AMOUNTPAIDANDREIMBURSED);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmountPaidAndReimbursed.
     * @param value value to set the AmountPaidAndReimbursed
     */
    public void setAmountPaidAndReimbursed(Float value) {
        setAttributeInternal(AMOUNTPAIDANDREIMBURSED, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("dats.model.Payments");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
    
        
    //Get rateValue for rateId
    public float getRateValue(int rateId) {
        float rateValue = 0;
        ApplicationModule appMod = null;
        RatesViewImpl vo = null;
        try{        
         appMod = Configuration.createRootApplicationModule("dats.model.AppModule", "AppModuleShared");
         vo = (RatesViewImpl) appMod.findViewObject("RatesView1");
        //Create View criteria
        ViewCriteria viewCriteria = vo.createViewCriteria();
        ViewCriteriaRow viewCriteriaRow = viewCriteria.createViewCriteriaRow();
        viewCriteriaRow.setAttribute("Id", rateId);
        viewCriteria.add(viewCriteriaRow);
        viewCriteria.setCriteriaMode(ViewCriteria.CRITERIA_MODE_CACHE);
        vo.applyViewCriteria(viewCriteria);
        vo.executeQuery();        
        while (vo.hasNext()) {
            RatesViewRowImpl row = (RatesViewRowImpl) vo.next();
            rateValue = row.getRate();
        }
        }catch(Exception exception){
            System.err.println("Error in getValue() method");
        }finally{
            if(appMod != null){
                Configuration.releaseRootApplicationModule(appMod, false);                      
            }  
            vo=null;
        }
        //System.err.println("getValue() method called");
        //System.err.println("Rate : "+rateValue);
        return rateValue;
    }      
}

