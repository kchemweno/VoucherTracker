package dats.model;

import oracle.jbo.ApplicationModule;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.client.Configuration;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 05 11:40:55 EAT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UsersViewImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public UsersViewImpl() {
    }
    
    private static int loggedinUserId;

    //Get userId for username
    public int getUserId(String username) {
        ApplicationModule appMod =null;
        UsersViewImpl vo = null;
        int userId = 0;
        try{
        Configuration.createRootApplicationModule("dats.model.AppModule", "AppModuleLocal");
        vo = (UsersViewImpl) appMod.findViewObject("UsersView1");
        //Create View criteria
        ViewCriteria viewCriteria = vo.createViewCriteria();
        ViewCriteriaRow viewCriteriaRow = viewCriteria.createViewCriteriaRow();
        viewCriteriaRow.setAttribute("Username", username);
        viewCriteria.add(viewCriteriaRow);
        viewCriteria.setCriteriaMode(ViewCriteria.CRITERIA_MODE_CACHE);
        vo.applyViewCriteria(viewCriteria);
        vo.executeQuery();       
        while (vo.hasNext()) {
            UsersViewRowImpl row = (UsersViewRowImpl) vo.next();
            userId = row.getId();
        }
        }catch(Exception exception){
            System.err.println("Error getting userId in getUserId(String username) method");
        }finally{
            if(appMod != null){
                Configuration.releaseRootApplicationModule(appMod, false);                      
            }  
            vo=null;
        }
        return userId;
    } 

    public String getUserFullname(String userId) {
        String providerDisplayName = "";
        ApplicationModule appMod=null;
        UsersViewImpl vo;
        try{
        appMod = Configuration.createRootApplicationModule("dats.model.AppModule", "AppModuleShared");
        vo = (UsersViewImpl) appMod.findViewObject("UsersView1");
        //Create View criteria
        ViewCriteria viewCriteria = vo.createViewCriteria();
        ViewCriteriaRow viewCriteriaRow = viewCriteria.createViewCriteriaRow();
        viewCriteriaRow.setAttribute("Id", userId);
        viewCriteria.add(viewCriteriaRow);
        viewCriteria.setCriteriaMode(ViewCriteria.CRITERIA_MODE_CACHE);
        vo.applyViewCriteria(viewCriteria);
        vo.executeQuery();
        while (vo.hasNext()) {
            UsersViewRowImpl row = (UsersViewRowImpl) vo.next();
          // String[] names =  row.getAttributeNames();
            //System.out.println(row.getAttribute("FirstName") + " " + row.getLastName() + " : "+userId);
            providerDisplayName = row.getAttribute("Firstname") + " " + row.getLastname();
        }
        }catch(Exception exception){
          //  exception.printStackTrace();
            System.err.println("Error occurred getting user fullname in getUserFullname(String userId)  method");
        }finally{
            if(appMod != null){
                Configuration.releaseRootApplicationModule(appMod, false);                      
            }
            vo = null;
        }
        return providerDisplayName;
    }

    //Get email for userId
    public String getEmail(String userId) {
        // String userEmail = "";
        ApplicationModule appMod=null;
        UsersViewImpl vo;
        String userEmail = "";
        try{
        appMod = Configuration.createRootApplicationModule("dats.model.AppModule", "AppModuleLocal");
        vo = (UsersViewImpl) appMod.findViewObject("UsersView1");
        //Create View criteria
        ViewCriteria viewCriteria = vo.createViewCriteria();
        ViewCriteriaRow viewCriteriaRow = viewCriteria.createViewCriteriaRow();
        viewCriteriaRow.setAttribute("Id", userId);
        viewCriteria.add(viewCriteriaRow);
        viewCriteria.setCriteriaMode(ViewCriteria.CRITERIA_MODE_CACHE);
        vo.applyViewCriteria(viewCriteria);
        vo.executeQuery();        
        while (vo.hasNext()) {
            UsersViewRowImpl row = (UsersViewRowImpl) vo.next();
            userEmail = row.getEmail();
        }
        }catch(Exception exception){
            System.err.println("Error occurred getting email using userid in getEmail(String userId) method");
        }finally{
            if(appMod != null){
                Configuration.releaseRootApplicationModule(appMod, false);                      
            }
            vo = null;
        }
        return userEmail;
    } 

    //Get email for user firstname
    public String getUserFirstName(int userId) {
        ApplicationModule appMod=null;
        UsersViewImpl vo; 
        String userFirstname = "";
        try{
        appMod = Configuration.createRootApplicationModule("dats.model.AppModule", "AppModuleLocal");
        vo = (UsersViewImpl) appMod.findViewObject("UsersView1");            
        //Create View criteria
        ViewCriteria viewCriteria = vo.createViewCriteria();
        ViewCriteriaRow viewCriteriaRow = viewCriteria.createViewCriteriaRow();
        viewCriteriaRow.setAttribute("Id", userId);
        viewCriteria.add(viewCriteriaRow);
        viewCriteria.setCriteriaMode(ViewCriteria.CRITERIA_MODE_CACHE);
        vo.applyViewCriteria(viewCriteria);
        vo.executeQuery();       
        while (vo.hasNext()) {
            UsersViewRowImpl row = (UsersViewRowImpl) vo.next();
            userFirstname = row.getFirstname();
        }
            }catch(Exception exception){
                System.err.println("Error getting user first name in getUserFirstName(int userId) method");
        }finally{
            if(appMod != null){
                Configuration.releaseRootApplicationModule(appMod, false);                      
            }  
            vo = null;
        }
        return userFirstname;
    }     

    /**
     * Returns the variable value for bind_userid.
     * @return variable value for bind_userid
     */
    public String getbind_userid() {
        return (String) ensureVariableManager().getVariableValue("bind_userid");
    }

    /**
     * Sets <code>value</code> for variable bind_userid.
     * @param value value to bind as bind_userid
     */
    public void setbind_userid(String value) {
        ensureVariableManager().setVariableValue("bind_userid", value);
    }


    public static void setLoggedinUserId(int loggedinUserId) {
        UsersViewImpl.loggedinUserId = loggedinUserId;
    }

    public static int getLoggedinUserId() {
        return loggedinUserId;
    }    
}


