package dats.model;

import java.sql.Date;

import oracle.jbo.ApplicationModule;
import oracle.jbo.RowSet;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.client.Configuration;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 12 11:13:46 EAT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PaymentsViewRowImpl extends ViewRowImpl implements dats.model.common.PaymentsViewRow {

    public static final int ENTITY_PAYMENTS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Id,
        MoneyVendorId,
        DaId,
        SectorId,
        CategoryId,
        PhaseId,
        LoaId,
        DistributedItemsId,
        NgoId,
        DistrictId,
        PaymentLocationId,
        PaymentCycleId,
        PeriodPaid,
        ForemenVouchers,
        Workers,
        PoNumber,
        AuthorizedAmount,
        AmountPaid,
        RateId,
        VouchersToReceive,
        DateOfInvoice,
        ReimbursedThroughInvoiceNumber,
        DateOfPay,
        PayReferenceNumber,
        BalToPay,
        MoneyVendorCommission,
        GrossAmount,
        MoneyVendorsView1,
        DisbursementAuthorizations1View1,
        SectorsView1,
        CategoriesView1,
        PhasesView1,
        LoasView1,
        DistributedItemsView1,
        NgosView1,
        DistrictsView1,
        PaymentLocationsView1,
        PaymentCyclesView1,
        RatesView1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ID = AttributesEnum.Id.index();
    public static final int MONEYVENDORID = AttributesEnum.MoneyVendorId.index();
    public static final int DAID = AttributesEnum.DaId.index();
    public static final int SECTORID = AttributesEnum.SectorId.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int PHASEID = AttributesEnum.PhaseId.index();
    public static final int LOAID = AttributesEnum.LoaId.index();
    public static final int DISTRIBUTEDITEMSID = AttributesEnum.DistributedItemsId.index();
    public static final int NGOID = AttributesEnum.NgoId.index();
    public static final int DISTRICTID = AttributesEnum.DistrictId.index();
    public static final int PAYMENTLOCATIONID = AttributesEnum.PaymentLocationId.index();
    public static final int PAYMENTCYCLEID = AttributesEnum.PaymentCycleId.index();
    public static final int PERIODPAID = AttributesEnum.PeriodPaid.index();
    public static final int FOREMENVOUCHERS = AttributesEnum.ForemenVouchers.index();
    public static final int WORKERS = AttributesEnum.Workers.index();
    public static final int PONUMBER = AttributesEnum.PoNumber.index();
    public static final int AUTHORIZEDAMOUNT = AttributesEnum.AuthorizedAmount.index();
    public static final int AMOUNTPAID = AttributesEnum.AmountPaid.index();
    public static final int RATEID = AttributesEnum.RateId.index();
    public static final int VOUCHERSTORECEIVE = AttributesEnum.VouchersToReceive.index();
    public static final int DATEOFINVOICE = AttributesEnum.DateOfInvoice.index();
    public static final int REIMBURSEDTHROUGHINVOICENUMBER = AttributesEnum.ReimbursedThroughInvoiceNumber.index();
    public static final int DATEOFPAY = AttributesEnum.DateOfPay.index();
    public static final int PAYREFERENCENUMBER = AttributesEnum.PayReferenceNumber.index();
    public static final int BALTOPAY = AttributesEnum.BalToPay.index();
    public static final int MONEYVENDORCOMMISSION = AttributesEnum.MoneyVendorCommission.index();
    public static final int GROSSAMOUNT = AttributesEnum.GrossAmount.index();
    public static final int MONEYVENDORSVIEW1 = AttributesEnum.MoneyVendorsView1.index();
    public static final int DISBURSEMENTAUTHORIZATIONS1VIEW1 = AttributesEnum.DisbursementAuthorizations1View1.index();
    public static final int SECTORSVIEW1 = AttributesEnum.SectorsView1.index();
    public static final int CATEGORIESVIEW1 = AttributesEnum.CategoriesView1.index();
    public static final int PHASESVIEW1 = AttributesEnum.PhasesView1.index();
    public static final int LOASVIEW1 = AttributesEnum.LoasView1.index();
    public static final int DISTRIBUTEDITEMSVIEW1 = AttributesEnum.DistributedItemsView1.index();
    public static final int NGOSVIEW1 = AttributesEnum.NgosView1.index();
    public static final int DISTRICTSVIEW1 = AttributesEnum.DistrictsView1.index();
    public static final int PAYMENTLOCATIONSVIEW1 = AttributesEnum.PaymentLocationsView1.index();
    public static final int PAYMENTCYCLESVIEW1 = AttributesEnum.PaymentCyclesView1.index();
    public static final int RATESVIEW1 = AttributesEnum.RatesView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PaymentsViewRowImpl() {
    }

    /**
     * Gets Payments entity object.
     * @return the Payments
     */
    public EntityImpl getPayments() {
        return (EntityImpl) getEntity(ENTITY_PAYMENTS);
    }

    /**
     * Gets the attribute value for id using the alias name Id.
     * @return the id
     */
    public Integer getId() {
        return (Integer) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for id using the alias name Id.
     * @param value value to set the id
     */
    public void setId(Integer value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for money_vendor_id using the alias name MoneyVendorId.
     * @return the money_vendor_id
     */
    public Integer getMoneyVendorId() {
        return (Integer) getAttributeInternal(MONEYVENDORID);
    }

    /**
     * Sets <code>value</code> as attribute value for money_vendor_id using the alias name MoneyVendorId.
     * @param value value to set the money_vendor_id
     */
    public void setMoneyVendorId(Integer value) {
        setAttributeInternal(MONEYVENDORID, value);
    }

    /**
     * Gets the attribute value for da_id using the alias name DaId.
     * @return the da_id
     */
    public Integer getDaId() {
        return (Integer) getAttributeInternal(DAID);
    }

    /**
     * Sets <code>value</code> as attribute value for da_id using the alias name DaId.
     * @param value value to set the da_id
     */
    public void setDaId(Integer value) {
        setAttributeInternal(DAID, value);
    }

    /**
     * Gets the attribute value for sector_id using the alias name SectorId.
     * @return the sector_id
     */
    public Integer getSectorId() {
        return (Integer) getAttributeInternal(SECTORID);
    }

    /**
     * Sets <code>value</code> as attribute value for sector_id using the alias name SectorId.
     * @param value value to set the sector_id
     */
    public void setSectorId(Integer value) {
        setAttributeInternal(SECTORID, value);
    }

    /**
     * Gets the attribute value for category_id using the alias name CategoryId.
     * @return the category_id
     */
    public Integer getCategoryId() {
        return (Integer) getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as attribute value for category_id using the alias name CategoryId.
     * @param value value to set the category_id
     */
    public void setCategoryId(Integer value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for phase_id using the alias name PhaseId.
     * @return the phase_id
     */
    public Integer getPhaseId() {
        return (Integer) getAttributeInternal(PHASEID);
    }

    /**
     * Sets <code>value</code> as attribute value for phase_id using the alias name PhaseId.
     * @param value value to set the phase_id
     */
    public void setPhaseId(Integer value) {
        setAttributeInternal(PHASEID, value);
    }

    /**
     * Gets the attribute value for loa__id using the alias name LoaId.
     * @return the loa__id
     */
    public Integer getLoaId() {
        return (Integer) getAttributeInternal(LOAID);
    }

    /**
     * Sets <code>value</code> as attribute value for loa__id using the alias name LoaId.
     * @param value value to set the loa__id
     */
    public void setLoaId(Integer value) {
        setAttributeInternal(LOAID, value);
    }

    /**
     * Gets the attribute value for distributed_items_id using the alias name DistributedItemsId.
     * @return the distributed_items_id
     */
    public Integer getDistributedItemsId() {
        return (Integer) getAttributeInternal(DISTRIBUTEDITEMSID);
    }

    /**
     * Sets <code>value</code> as attribute value for distributed_items_id using the alias name DistributedItemsId.
     * @param value value to set the distributed_items_id
     */
    public void setDistributedItemsId(Integer value) {
        setAttributeInternal(DISTRIBUTEDITEMSID, value);
    }

    /**
     * Gets the attribute value for ngo_id using the alias name NgoId.
     * @return the ngo_id
     */
    public Integer getNgoId() {
        return (Integer) getAttributeInternal(NGOID);
    }

    /**
     * Sets <code>value</code> as attribute value for ngo_id using the alias name NgoId.
     * @param value value to set the ngo_id
     */
    public void setNgoId(Integer value) {
        setAttributeInternal(NGOID, value);
    }

    /**
     * Gets the attribute value for district_id using the alias name DistrictId.
     * @return the district_id
     */
    public Integer getDistrictId() {
        return (Integer) getAttributeInternal(DISTRICTID);
    }

    /**
     * Sets <code>value</code> as attribute value for district_id using the alias name DistrictId.
     * @param value value to set the district_id
     */
    public void setDistrictId(Integer value) {
        setAttributeInternal(DISTRICTID, value);
    }

    /**
     * Gets the attribute value for payment_location_id using the alias name PaymentLocationId.
     * @return the payment_location_id
     */
    public Integer getPaymentLocationId() {
        return (Integer) getAttributeInternal(PAYMENTLOCATIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for payment_location_id using the alias name PaymentLocationId.
     * @param value value to set the payment_location_id
     */
    public void setPaymentLocationId(Integer value) {
        setAttributeInternal(PAYMENTLOCATIONID, value);
    }

    /**
     * Gets the attribute value for payment_cycle_id using the alias name PaymentCycleId.
     * @return the payment_cycle_id
     */
    public Integer getPaymentCycleId() {
        return (Integer) getAttributeInternal(PAYMENTCYCLEID);
    }

    /**
     * Sets <code>value</code> as attribute value for payment_cycle_id using the alias name PaymentCycleId.
     * @param value value to set the payment_cycle_id
     */
    public void setPaymentCycleId(Integer value) {
        setAttributeInternal(PAYMENTCYCLEID, value);
    }

    /**
     * Gets the attribute value for period_paid using the alias name PeriodPaid.
     * @return the period_paid
     */
    public String getPeriodPaid() {
        return (String) getAttributeInternal(PERIODPAID);
    }

    /**
     * Sets <code>value</code> as attribute value for period_paid using the alias name PeriodPaid.
     * @param value value to set the period_paid
     */
    public void setPeriodPaid(String value) {
        setAttributeInternal(PERIODPAID, value);
    }

    /**
     * Gets the attribute value for foremen_vouchers using the alias name ForemenVouchers.
     * @return the foremen_vouchers
     */
    public Integer getForemenVouchers() {
        return (Integer) getAttributeInternal(FOREMENVOUCHERS);
    }

    /**
     * Sets <code>value</code> as attribute value for foremen_vouchers using the alias name ForemenVouchers.
     * @param value value to set the foremen_vouchers
     */
    public void setForemenVouchers(Integer value) {
        setAttributeInternal(FOREMENVOUCHERS, value);
    }

    /**
     * Gets the attribute value for workers using the alias name Workers.
     * @return the workers
     */
    public Integer getWorkers() {
        return (Integer) getAttributeInternal(WORKERS);
    }

    /**
     * Sets <code>value</code> as attribute value for workers using the alias name Workers.
     * @param value value to set the workers
     */
    public void setWorkers(Integer value) {
        setAttributeInternal(WORKERS, value);
    }

    /**
     * Gets the attribute value for po_number using the alias name PoNumber.
     * @return the po_number
     */
    public String getPoNumber() {
        return (String) getAttributeInternal(PONUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for po_number using the alias name PoNumber.
     * @param value value to set the po_number
     */
    public void setPoNumber(String value) {
        setAttributeInternal(PONUMBER, value);
    }

    /**
     * Gets the attribute value for authorized_amount using the alias name AuthorizedAmount.
     * @return the authorized_amount
     */
    public Float getAuthorizedAmount() {
        return (Float) getAttributeInternal(AUTHORIZEDAMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for authorized_amount using the alias name AuthorizedAmount.
     * @param value value to set the authorized_amount
     */
    public void setAuthorizedAmount(Float value) {
        setAttributeInternal(AUTHORIZEDAMOUNT, value);
    }

    /**
     * Gets the attribute value for amount_paid using the alias name AmountPaid.
     * @return the amount_paid
     */
    public Float getAmountPaid() {
        return (Float) getAttributeInternal(AMOUNTPAID);
    }

    /**
     * Sets <code>value</code> as attribute value for amount_paid using the alias name AmountPaid.
     * @param value value to set the amount_paid
     */
    public void setAmountPaid(Float value) {
        setAttributeInternal(AMOUNTPAID, value);
    }

    /**
     * Gets the attribute value for rate_id using the alias name RateId.
     * @return the rate_id
     */
    public Integer getRateId() {
        return (Integer) getAttributeInternal(RATEID);
    }

    /**
     * Sets <code>value</code> as attribute value for rate_id using the alias name RateId.
     * @param value value to set the rate_id
     */
    public void setRateId(Integer value) {
        setAttributeInternal(RATEID, value);
    }

    /**
     * Gets the attribute value for vouchers_to_receive using the alias name VouchersToReceive.
     * @return the vouchers_to_receive
     */
    public Integer getVouchersToReceive() {
        return (Integer) getAttributeInternal(VOUCHERSTORECEIVE);
    }

    /**
     * Sets <code>value</code> as attribute value for vouchers_to_receive using the alias name VouchersToReceive.
     * @param value value to set the vouchers_to_receive
     */
    public void setVouchersToReceive(Integer value) {
        setAttributeInternal(VOUCHERSTORECEIVE, value);
    }

    /**
     * Gets the attribute value for date_of_invoice using the alias name DateOfInvoice.
     * @return the date_of_invoice
     */
    public Date getDateOfInvoice() {
        return (Date) getAttributeInternal(DATEOFINVOICE);
    }

    /**
     * Sets <code>value</code> as attribute value for date_of_invoice using the alias name DateOfInvoice.
     * @param value value to set the date_of_invoice
     */
    public void setDateOfInvoice(Date value) {
        setAttributeInternal(DATEOFINVOICE, value);
    }

    /**
     * Gets the attribute value for reimbursed_through_invoice_number using the alias name ReimbursedThroughInvoiceNumber.
     * @return the reimbursed_through_invoice_number
     */
    public String getReimbursedThroughInvoiceNumber() {
        return (String) getAttributeInternal(REIMBURSEDTHROUGHINVOICENUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for reimbursed_through_invoice_number using the alias name ReimbursedThroughInvoiceNumber.
     * @param value value to set the reimbursed_through_invoice_number
     */
    public void setReimbursedThroughInvoiceNumber(String value) {
        setAttributeInternal(REIMBURSEDTHROUGHINVOICENUMBER, value);
    }

    /**
     * Gets the attribute value for date_of_pay using the alias name DateOfPay.
     * @return the date_of_pay
     */
    public Date getDateOfPay() {
        return (Date) getAttributeInternal(DATEOFPAY);
    }

    /**
     * Sets <code>value</code> as attribute value for date_of_pay using the alias name DateOfPay.
     * @param value value to set the date_of_pay
     */
    public void setDateOfPay(Date value) {
        setAttributeInternal(DATEOFPAY, value);
    }

    /**
     * Gets the attribute value for pay_reference_number using the alias name PayReferenceNumber.
     * @return the pay_reference_number
     */
    public String getPayReferenceNumber() {
        return (String) getAttributeInternal(PAYREFERENCENUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for pay_reference_number using the alias name PayReferenceNumber.
     * @param value value to set the pay_reference_number
     */
    public void setPayReferenceNumber(String value) {
        setAttributeInternal(PAYREFERENCENUMBER, value);
    }

    /**
     * Gets the attribute value for Bal_To_Pay using the alias name BalToPay.
     * @return the Bal_To_Pay
     */
    public Float getBalToPay() {
        return (Float) getAttributeInternal(BALTOPAY);
    }

    /**
     * Sets <code>value</code> as attribute value for Bal_To_Pay using the alias name BalToPay.
     * @param value value to set the Bal_To_Pay
     */
    public void setBalToPay(Float value) {
        setAttributeInternal(BALTOPAY, value);
    }

    /**
     * Gets the attribute value for Money_Vendor_Commission using the alias name MoneyVendorCommission.
     * @return the Money_Vendor_Commission
     */
    public Float getMoneyVendorCommission() {
        return (Float) getAttributeInternal(MONEYVENDORCOMMISSION);
    }

    /**
     * Sets <code>value</code> as attribute value for Money_Vendor_Commission using the alias name MoneyVendorCommission.
     * @param value value to set the Money_Vendor_Commission
     */
    public void setMoneyVendorCommission(Float value) {
        setAttributeInternal(MONEYVENDORCOMMISSION, value);
    }

    /**
     * Gets the attribute value for Gross_Amount using the alias name GrossAmount.
     * @return the Gross_Amount
     */
    public Float getGrossAmount() {
        return (Float) getAttributeInternal(GROSSAMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for Gross_Amount using the alias name GrossAmount.
     * @param value value to set the Gross_Amount
     */
    public void setGrossAmount(Float value) {
        setAttributeInternal(GROSSAMOUNT, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MoneyVendorsView1.
     */
    public RowSet getMoneyVendorsView1() {
        return (RowSet) getAttributeInternal(MONEYVENDORSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DisbursementAuthorizations1View1.
     */
    public RowSet getDisbursementAuthorizations1View1() {
        return (RowSet) getAttributeInternal(DISBURSEMENTAUTHORIZATIONS1VIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SectorsView1.
     */
    public RowSet getSectorsView1() {
        return (RowSet) getAttributeInternal(SECTORSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CategoriesView1.
     */
    public RowSet getCategoriesView1() {
        return (RowSet) getAttributeInternal(CATEGORIESVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PhasesView1.
     */
    public RowSet getPhasesView1() {
        return (RowSet) getAttributeInternal(PHASESVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LoasView1.
     */
    public RowSet getLoasView1() {
        return (RowSet) getAttributeInternal(LOASVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DistributedItemsView1.
     */
    public RowSet getDistributedItemsView1() {
        return (RowSet) getAttributeInternal(DISTRIBUTEDITEMSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> NgosView1.
     */
    public RowSet getNgosView1() {
        return (RowSet) getAttributeInternal(NGOSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DistrictsView1.
     */
    public RowSet getDistrictsView1() {
        return (RowSet) getAttributeInternal(DISTRICTSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PaymentLocationsView1.
     */
    public RowSet getPaymentLocationsView1() {
        return (RowSet) getAttributeInternal(PAYMENTLOCATIONSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PaymentCyclesView1.
     */
    public RowSet getPaymentCyclesView1() {
        return (RowSet) getAttributeInternal(PAYMENTCYCLESVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RatesView1.
     */
    public RowSet getRatesView1() {
        return (RowSet) getAttributeInternal(RATESVIEW1);
    }
        
    //Get rateValue for rateId
  /*  public float getRateValue(int rateId) {
        float rateValue = 0;
        try{        
        ApplicationModule appMod = Configuration.createRootApplicationModule("dats.model.AppModule", "AppModuleShared");
        RatesViewImpl vo = (RatesViewImpl) appMod.findViewObject("RatesView1");
        //Create View criteria
        ViewCriteria viewCriteria = vo.createViewCriteria();
        ViewCriteriaRow viewCriteriaRow = viewCriteria.createViewCriteriaRow();
        viewCriteriaRow.setAttribute("Id", rateId);
        viewCriteria.add(viewCriteriaRow);
        viewCriteria.setCriteriaMode(ViewCriteria.CRITERIA_MODE_CACHE);
        vo.applyViewCriteria(viewCriteria);
        vo.executeQuery();
        
        while (vo.hasNext()) {
            RatesViewRowImpl row = (RatesViewRowImpl) vo.next();
            rateValue = row.getRate();
        }
        }catch(Exception exception){
            System.err.println("Error in getValue() method");
        }
        return rateValue;
    }    */
}

